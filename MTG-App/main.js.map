{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/classes/mtgcard.ts","webpack:///./src/app/mtgcard/mtgcard.component.css","webpack:///./src/app/mtgcard/mtgcard.component.html","webpack:///./src/app/mtgcard/mtgcard.component.ts","webpack:///./src/app/services/mtgcard.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<div class=\\\"navbar navbar-dark bg-primary sticky-top\\\">\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Random MTG Cards</a>\\n</div>\\n<div class=\\\"container-fluid p-3 bg-light\\\"></div>\\n<div class=\\\"container-fluid bg-light\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"row justify-content-center\\\">\\n      <app-mtgcard *ngFor=\\\"let card of cards\\\" [card]=\\\"card\\\" class=\\\"p-1 col-10 col-sm-6 col-md-4 col-lg-3\\\">\\n      </app-mtgcard>\\n    </div>\\n  </div>\\n</div>\\n<div class=\\\"container-fluid bg-dark\\\">\\n  <div class=\\\"row p-5\\\">\\n    <div class=\\\"col-sm-6 text-light text-center\\\">\\n      Made with <a href=\\\"https://angular.io/\\\">Angular</a>, \\n      <a href=\\\"https://getbootstrap.com/\\\">Bootstrap 4</a>,\\n      and the <a href=\\\"https://magicthegathering.io/\\\">Magic The Gathering API</a>\\n    </div>\\n    <div class=\\\"col-sm-6 text-light text-center\\\">\\n      Made by Samuel Rider-Leck.\\n      See my <a href=\\\"https://http://samuel-rider-leck.github.io\\\">website</a>.\\n    </div>\\n  </div>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\nimport { MTGCardService } from './services/mtgcard.service';\nimport { MTGCard } from './classes/mtgcard'\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  providers: [MTGCardService]\n})\nexport class AppComponent {\n  cards :MTGCard[]\n\n  constructor(private service: MTGCardService) { }\n\n  ngOnInit() {\n    this.service.getCards()\n      .subscribe(resp => {this.cards = resp.cards})\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { MTGCardComponent } from './mtgcard/mtgcard.component'\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MTGCardComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export class MTGCardResponse {\n  cards: MTGCard[];\n}\n\nexport class MTGCard {\n  name: string;\n  names: string[];\n  manacost: string;\n  cmc: number;\n  colors: string[];\n  colorIdentity: string[];\n  type: string;\n  supertypes: string[];\n  types: string[];\n  subtypes: string[];\n  rarity: string;\n  set: string;\n  setName: string;\n  text: string;\n  flavor: string;\n  artist: string;\n  number: string;\n  power: string;\n  toughness: string;\n  layout: string;\n  multiverseid: number;\n  imageUrl: string;\n  printings: string[];\n  foreignNames: ForeignMTGCard[];\n}\n\nexport class ForeignMTGCard {\n  name: string;\n  text: string;\n  flavor: string;\n  imageUrl: string;\n  language: string;\n  multiverseid: number;\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL210Z2NhcmQvbXRnY2FyZC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"card\\\">\\n  <img src={{imageUrl}} class=\\\"card-img-top\\\" alt=\\\"\\\"/>\\n  <div class=\\\"card-body\\\">\\n    <h5 class=\\\"card-title\\\">{{card.name}}</h5>\\n    <p class=\\\"card-text\\\">{{card.flavor}}</p>\\n  </div>\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\n\nimport {MTGCard} from '../classes/mtgcard';\n\n@Component({\n  selector: 'app-mtgcard',\n  templateUrl: './mtgcard.component.html',\n  styleUrls: ['./mtgcard.component.css']\n})\nexport class MTGCardComponent implements OnInit {\n  @Input() card: MTGCard;\n\n  imageUrl :string;\n\n  constructor() { }\n\n  ngOnInit() {\n    this.imageUrl = this.card.imageUrl;\n    if (!this.imageUrl){\n      for(var i=this.card.foreignNames.length;i>0;i--){\n        this.imageUrl = this.card.foreignNames[0].imageUrl || this.imageUrl;\n      }\n      this.imageUrl = this.imageUrl || \"assets/blank_card.jpg\"\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\n\nimport { MTGCard, MTGCardResponse } from '../classes/mtgcard';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MTGCardService {\n  constructor(private httpClient: HttpClient) { }\n\n  private cardarray: any\n\n  configURL = \"https://api.magicthegathering.io/v1/cards?random=true\"\n\n  getCards(): Observable<MTGCardResponse> {\n    return this.httpClient.get<MTGCardResponse>(this.configURL)\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}